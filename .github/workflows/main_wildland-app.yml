name: Build and deploy Laravel app to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, intl, pdo, pdo_mysql, pdo_pgsql, pdo_sqlite, gd, curl

      - name: Check for composer.json
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'composer.json'

      - name: Install Composer dependencies
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          composer install --prefer-dist --no-progress --no-scripts
          composer dump-autoload -o

      - name: Copy .env file
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Prepare deployment artifact
        run: |
          mkdir release
          # Copy all files and directories except the release directory itself
          find . -mindepth 1 -maxdepth 1 ! -name 'release' -exec cp -r {} release/ \;
          # Ensure .htaccess and .env are included
          cp .htaccess release/
          cp .env release/
          cd release
          zip -r ../release.zip ./* ./.htaccess ./.env
        shell: bash

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: laravel-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: laravel-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_DB8EE39C76934E918266A3AE01ABCD58 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B354518A1BE140D6A011935095A7EBE4 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_DF2E0379E99043AC976F77F96F19454B }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'wildland-app'
          package: .

      - name: Run database migrations
        run: php artisan migrate --force
        env:
          AZURE_HTTP_USER_AGENT: 'GitHubActions'
          DB_CONNECTION: mysql
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: 3306
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Clear application cache
        run: php artisan config:cache
        env:
          AZURE_HTTP_USER_AGENT: 'GitHubActions'

      # - name: Update Nginx Configuration or Restart Nginx
      #   run: |
      #     # Example command to update Nginx configuration (replace with your actual command)
      #     cp nginx.conf /etc/nginx/sites-available/default
      #     # Example command to restart Nginx
      #     systemctl restart nginx
      #     echo "Nginx configuration updated and Nginx restarted successfully"

      - name: SSH and Update Nginx Configuration
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo cp /path/to/custom/nginx.conf /etc/nginx/sites-available/default
            sudo systemctl restart nginx
