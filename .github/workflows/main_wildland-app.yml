name: Build and deploy Laravel app to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, intl, pdo, pdo_mysql, pdo_pgsql, pdo_sqlite, gd, curl

      - name: Check for composer.json
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'composer.json'

      - name: Install Composer dependencies
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          composer install --prefer-dist --no-progress --no-scripts
          composer dump-autoload -o

      - name: Copy .env file
        run: |
          cp .env.example .env
        shell: bash

      - name: Generate application key
        run: php artisan key:generate

      - name: Prepare deployment artifact
        run: |
          mkdir release
          find . -mindepth 1 -maxdepth 1 -not -name release -exec cp -r {} release/ \;
          cd release
          zip -r ../release.zip ./*
        shell: bash

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: laravel-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: laravel-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_DB8EE39C76934E918266A3AE01ABCD58 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B354518A1BE140D6A011935095A7EBE4 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_DF2E0379E99043AC976F77F96F19454B }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'Wildland Firebully'
          package: .

      - name: Run database migrations
        run: php artisan migrate --force

      - name: Clear application cache
        run: php artisan config:cache





#

# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# # More GitHub Actions for Azure: https://github.com/Azure/actions

# name: Build and deploy PHP app to Azure Web App - wildland-app

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# env:
#   AZURE_WEBAPP_NAME: WildlandFirebully   # set this to your application's name
#   AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
#   PHP_VERSION: '8.x'                  # set this to the PHP version to use

# permissions:
#   contents: read
#   pages: write
#   id-token: write

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v4

#       - name: Setup PHP
#         uses: shivammathur/setup-php@7c0b4c8c8ebed23eca9ec2802474895d105b11bc
#         with:
#           php-version: ${{ env.PHP_VERSION }}

#       - name: Check if composer.json exists
#         id: check_files
#         uses: andstor/file-existence-action@87d74d4732ddb824259d80c8a508c0124bf1c673
#         with:
#           files: 'composer.json'

#       - name: Get Composer Cache Directory
#         id: composer-cache
#         if: steps.check_files.outputs.files_exists == 'true'
#         run: |
#           echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

#       - name: Set up dependency caching for faster installs
#         uses: actions/cache@v3
#         if: steps.check_files.outputs.files_exists == 'true'
#         with:
#           path: ${{ steps.composer-cache.outputs.dir }}
#           key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-composer-

#       - name: Run composer install if composer.json exists
#         if: steps.check_files.outputs.files_exists == 'true'
#         run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

#       - name: Upload artifact for deployment job
#         uses: actions/upload-artifact@v3
#         with:
#           name: php-app
#           path: .

#   deploy:
#     permissions:
#       contents: none
#     runs-on: ubuntu-latest
#     needs: build
#     environment:
#       name: 'Development'
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#       permissions:
#         id-token: write #This is required for requesting the JWT

#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v3
#         with:
#           name: php-app

#       - name: Login to Azure
#         uses: azure/login@v1
#         with:
#           client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_DB8EE39C76934E918266A3AE01ABCD58 }}
#           tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B354518A1BE140D6A011935095A7EBE4 }}
#           subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_DF2E0379E99043AC976F77F96F19454B }}

#       - name: 'Deploy to Azure Web App'
#         id: deploy-to-webapp
#         uses: azure/webapps-deploy@v2
#         with:
#           app-name: ${{ env.APP_NAME }}
#           publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#           package: .
